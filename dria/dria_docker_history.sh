#!/bin/bash

# –ö–æ–ª—å–æ—Ä–∏
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# JSON-—Ñ–∞–π–ª
JSON_FILE="dria_points_history.json"
TIMESTAMP=$(date -Iseconds)

# –í–≤—ñ–¥ –¥—ñ–∞–ø–∞–∑–æ–Ω—É
read -p "üî¢ –í–≤–µ–¥—ñ—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 1): " START
read -p "üî¢ –í–≤–µ–¥—ñ—Ç—å –∫—ñ–Ω—Ü–µ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 10): " END

echo -e "${YELLOW}üîç –ó–±–∏—Ä–∞—î–º–æ DRIA points –∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ dria${START} –¥–æ dria${END}...${NC}"

declare -A CURRENT_POINTS

for ((i=START; i<=END; i++)); do
  CONTAINER="dria$i"
  echo -ne "üîÑ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER: "

  if docker exec "$CONTAINER" test -f /root/.dria/bin/dkn-compute-launcher; then
    POINTS=$(docker exec -it "$CONTAINER" /root/.dria/bin/dkn-compute-launcher points 2>/dev/null \
        | grep -oE '[0-9]+ \$DRIA' || echo "N/A")

    if [[ -n "$POINTS" ]]; then
      CURRENT_POINTS[$CONTAINER]=$POINTS
      echo -e "${GREEN}$POINTS $DRIA${NC}"
    else
      CURRENT_POINTS[$CONTAINER]=0
      echo -e "${RED}‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—ñ–Ω—Ç–∏${NC}"
    fi
  else
    CURRENT_POINTS[$CONTAINER]=0
    echo -e "${RED}üö´ dkn-compute-launcher –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ${NC}"
  fi
done

# –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ JSON
TMP_JSON=$(mktemp)
echo "{}" > "$TMP_JSON"
for CONTAINER in "${!CURRENT_POINTS[@]}"; do
  jq --arg key "$CONTAINER" --argjson val "${CURRENT_POINTS[$CONTAINER]}" \
    '. + {($key): $val}' "$TMP_JSON" > "$TMP_JSON.tmp" && mv "$TMP_JSON.tmp" "$TMP_JSON"
done

# –î–æ–¥–∞—Ç–∏ –∑ –º—ñ—Ç–∫–æ—é —á–∞—Å—É
if [[ -f "$JSON_FILE" ]]; then
  jq --arg time "$TIMESTAMP" --slurpfile data "$TMP_JSON" \
    '. + {($time): $data[0]}' "$JSON_FILE" > "${JSON_FILE}.tmp" && mv "${JSON_FILE}.tmp" "$JSON_FILE"
else
  jq --null-input --arg time "$TIMESTAMP" --slurpfile data "$TMP_JSON" \
    '{($time): $data[0]}' > "$JSON_FILE"
fi

rm "$TMP_JSON"

echo -e "\nüìÅ –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É —Ñ–∞–π–ª: ${YELLOW}$JSON_FILE${NC}"

# üîÅ –í–∏–≤–µ–¥–µ–Ω–Ω—è –¥–µ–ª—å—Ç–∏
LAST_TIMESTAMP=$(jq -r 'keys_unsorted | .[-2]' "$JSON_FILE")
if [[ "$LAST_TIMESTAMP" != "null" ]]; then
  echo -e "\nüìä –ó–º—ñ–Ω–∏ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–ø—É—Å–∫—É ($LAST_TIMESTAMP):"
  for CONTAINER in "${!CURRENT_POINTS[@]}"; do
    OLD=$(jq -r --arg t "$LAST_TIMESTAMP" --arg c "$CONTAINER" '.[$t][$c] // 0' "$JSON_FILE")
    NEW=${CURRENT_POINTS[$CONTAINER]}
    DELTA=$((NEW - OLD))
    SIGN=""
    [[ $DELTA -gt 0 ]] && SIGN="+"
    echo -e "$CONTAINER: ${GREEN}$NEW${NC} (${YELLOW}${SIGN}${DELTA}${NC})"
  done
fi
